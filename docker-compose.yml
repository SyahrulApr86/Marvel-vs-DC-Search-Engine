services:
  graphdb:
    image: ontotext/graphdb:10.6.3
    container_name: marvel-dc-graphdb
    ports:
      - "7200:7200"
    volumes:
      - graphdb_data:/opt/graphdb/home
      - graphdb_import:/root/graphdb-import
      - ./graphdb.properties:/opt/graphdb/home/conf/graphdb.properties
    environment:
      - GDB_HEAP_SIZE=4g
      - GDB_JAVA_OPTS=-Djava.awt.headless=true
    restart: unless-stopped
    networks:
      - marvel-dc-network

  redis:
    image: redis:7-alpine
    container_name: marvel-dc-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: >
      sh -c "
      if [ -n \"$$REDIS_PASSWORD\" ]; then
        redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru --requirepass \"$$REDIS_PASSWORD\"
      else
        redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
      fi
      "
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    restart: unless-stopped
    networks:
      - marvel-dc-network
    healthcheck:
      test: ["CMD", "redis-cli", "${REDIS_PASSWORD:+--no-auth-warning}", "${REDIS_PASSWORD:+-a}", "${REDIS_PASSWORD:-}", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3



  # Production Web Application Service
  web:
    build: .
    container_name: marvel-dc-webapp
    ports:
      - "${WEB_PORT:-8000}:8000"
    volumes:
      - static_files:/app/staticfiles
    environment:
      - GRAPHDB_HOST=${GRAPHDB_HOST:-http://graphdb:7200/}
      - GRAPHDB_REPOSITORY=${GRAPHDB_REPOSITORY:-kb}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_DB=${REDIS_DB:-0}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - DJANGO_DEBUG=${DJANGO_DEBUG:-False}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-django-insecure-change-this-in-production}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-localhost,127.0.0.1,0.0.0.0}
      - IMAGE_CACHE_TTL=${IMAGE_CACHE_TTL:-86400}
      - GUNICORN_WORKERS=${GUNICORN_WORKERS:-3}
      - GUNICORN_TIMEOUT=${GUNICORN_TIMEOUT:-120}
      - DATABASE_URL=${DATABASE_URL:-}
    depends_on:
      graphdb:
        condition: service_started
      redis:
        condition: service_healthy
    networks:
      - marvel-dc-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  graphdb_data:
    driver: local
  graphdb_import:
    driver: local
  redis_data:
    driver: local
  static_files:
    driver: local

networks:
  marvel-dc-network:
    driver: bridge 